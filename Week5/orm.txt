Database Migration:
Database Migration, in enterprise discussions, is likely to refer to the process of selecting, preparing, extracting, and transforming data and permanently transferring it from one computer storage system to another.

Schema Migrations, I track changes to my Database schemas.

Object Relational Mapping (ORM) is a technique used in creating a "bridge" between object-oriented programs and, in most cases, relational databases.

Object-relational mapping (ORM) is a design pattern that helps streamline communication between relational databases and object-oriented programming languages like Java or Python. 

Why Use an ORM (Object-Relational Map)?
Databases and object-oriented programs use different programming languages and store data differently, which can lead to communication difficulties between languages. ORM maps objects onto the relational database table so that when we save an object to the database, it’s broken down into smaller parts that the database can store. These parts are then saved in a logical order. When we access the object again, the program can retrieve the parts from the database to reconstruct the object.

How Does Object-Relational Mapping Work?
ORM produces a structured map that reveals the relationships between objects and tables, or data, without getting into the minutiae of the data structure. Objects are essentially converted into digestible parts that a database can store for future retrieval. ORM connects object-oriented programming languages or applications with a relational database, communicating any changes made to an object to the database, which then alters the data accordingly.   

Because ORM monitors and handles interface changes, developers don’t need to worry about editing code on a constant basis. This technique also enables teams to understand how a database is structured without needing to review the code, making it easier to glean insights from complex states and codes generated by object-oriented programs. 

https://www.freecodecamp.org/news/object-relational-mapping-in-nodejs-with-sequelize-orm/